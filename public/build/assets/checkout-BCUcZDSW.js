import{$ as e,a}from"./jquery-CyGccwRX.js";e(document).ready(function(){const u=e('meta[name="csrf-token"]').attr("content");function d(){console.log("Fetching cart..."),e.ajax({url:"/api/cart",method:"GET",success:function(o){if(o&&typeof o=="object"){const r=Object.values(o);i(r),s(r),console.log("Cart fetched:",r)}else console.error("Response data is not in expected format:",o)},error:function(o){console.error("There was an error fetching the cart!",o)}})}function m(){console.log("Fetching watchlist..."),e.ajax({url:"/api/watchlist",method:"GET",success:function(o){if(o&&typeof o=="object"){const r=Object.values(o);console.log("Watchlist:",r);const t=r.length;document.getElementById("total-watchlist-items").innerText=t,document.getElementById("total-watchlist-items-mobile").innerText=t}else console.error("Response data is not in expected format:",o)},error:function(o){console.error("There was an error fetching the watchlist!",o)}})}function l(){console.log("Updating cart count..."),e.ajax({url:"/api/cart",method:"GET",success:function(o){if(o&&typeof o=="object"){const t=Object.values(o).reduce((c,n)=>c+parseInt(n.quantity,10),0);l(),e("#total-cart-items").text(t),e("#total-cart-items-mobile").text(t)}else console.error("Response data is not in expected format:",o)},error:function(o){console.error("There was an error fetching the cart count!",o)}})}function i(o){const r=e("#cart-items");r.empty(),o.forEach(t=>{const c=`
                <tr data-id="${t.id}">
                    <td>${t.product_name}</td>
                    <td>$${parseFloat(t.price).toFixed(2)}</td>
                    <td style="width:150px;">
                        <input type="number" class="item-quantity" value="${t.quantity}" min="1">
                    </td>
                    <td style="width:150px;">$${(t.price*t.quantity).toFixed(2)}</td>
                    <td>
                        <button class="btn-sm btn btn-danger remove-from-cart">Remove</button>
                    </td>
                </tr>
            `;r.append(c)})}function s(o){const r=o.reduce((t,c)=>t+c.price*c.quantity,0);e("#cart-total").text(r.toFixed(2))}function f(){const o=e("#coupon-code").val();console.log("Applying coupon:",o),e.ajax({url:"/api/apply-coupon",method:"POST",data:{coupon_code:o},headers:{"X-CSRF-TOKEN":u},success:function(r){if(r&&typeof r.cart=="object"){const t=Object.values(r.cart);i(t),s(t),a.success("Coupon applied successfully")}else console.error("Response data is not in expected format:",r.cart),a.error("Failed to apply coupon")},error:function(r){console.error("There was an error applying the coupon:",r),a.error("Failed to apply coupon")}})}function p(){console.log("Checking out...");const o=[];e("#cart-items tr").each(function(){const t=e(this).data("id"),c=parseInt(e(this).find(".item-quantity").val())||0,n=parseFloat(e(this).find(".item-price").val())||0,h=e(this).find(".item-product_name").val()||"",y=parseInt(e(this).find(".item-stock_quantity").val())||0;o.push({id:t,quantity:c,product_name:h,price:n,stock_quantity:y})});const r=e('meta[name="csrf-token"]').attr("content");e.ajax({url:"/api/checkout",method:"POST",data:{cartItems:o,cartTotal:parseFloat(e("#cart-total").text())||0},headers:{"X-CSRF-TOKEN":r},success:function(t){console.log(t),e("#cart-items").empty(),e("#cart-total").text("0.00"),a.success("Checkout successful!")},error:function(t){console.error("There was an error during checkout!",t),a.error("Checkout failed")}})}e("#apply-coupon").click(f),e("#checkout").click(p),e("#cart-items").on("change",".item-quantity",function(){const r=e(this).closest("tr").data("id"),t=e(this).val();t<1?confirm("Are you sure you want to remove this item from your cart?")?e.ajax({url:`/api/cart/${r}`,method:"DELETE",headers:{"X-CSRF-TOKEN":u},success:function(c){if(c&&typeof c.cart=="object"){const n=Object.values(c.cart);i(n),s(n),a.success("Item removed from cart")}else console.error("Response data is not in expected format:",c.cart),a.error("Failed to remove item from cart")},error:function(c){console.error("There was an error removing the item from the cart!",c),a.error("Failed to remove item from cart")}}):e(this).val(1):e.ajax({url:`/api/cart/${r}`,method:"PATCH",data:{quantity:t},headers:{"X-CSRF-TOKEN":u},success:function(c){if(c&&c.status==="success"){const n=Object.values(c.cart);i(n),s(n),a.set("notifier","position","top-center"),a.success("Quantity updated")}else console.error("Response data is not in expected format:",c),a.error("Failed to update quantity")},error:function(c){console.error("There was an error updating the product quantity!",c),a.error("Failed to update quantity")}})}),e("#cart-items").on("click",".remove-from-cart",function(){const r=e(this).closest("tr").data("id");e.ajax({url:`/api/cart/${r}`,method:"DELETE",headers:{"X-CSRF-TOKEN":u},success:function(t){if(t&&typeof t.cart=="object"){const c=Object.values(t.cart);i(c),s(c),a.set("notifier","position","top-center"),a.success("Item removed from cart")}else console.error("Response data is not in expected format:",t.cart),a.error("Failed to remove item from cart")},error:function(t){console.error("There was an error removing the product from the cart!",t),a.error("Failed to remove item from cart")}})}),d(),m(),l()});
